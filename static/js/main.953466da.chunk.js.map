{"version":3,"sources":["images/logo.png","images/back.png","components/SidePanel/sidepanel.js","components/Box/introbox.js","components/Box/aboutbox.js","components/Box/musicbox.js","components/Content/content.js","pages/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sidePanel","className","Image","src","style","height","width","margin","href","introbox","position","Button","basic","color","Icon","name","img","aboutbox","marginTop","musicbox","scrolling","frameborder","allow","title","content","Home","Container","marginLeft","marginRight","Grid","Column","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,kQCwC5BC,MAjCf,WACE,OACE,yBAAKC,UAAU,aACb,kBAACC,EAAA,EAAD,CAAOC,IAAKA,IAAKC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,IAAKC,OAAQ,UAC3D,+CACA,uBAAGN,UAAU,eAAb,aACa,IACX,uBAAGO,KAAK,2CAAR,cAEF,wBAAIP,UAAU,SACZ,4BACE,uBAAGO,KAAK,KAAR,SAEF,4BACE,uBAAGA,KAAK,KAAR,UAEF,4BACE,uBAAGA,KAAK,KAAR,UAEF,4BACE,uBAAGA,KAAK,KAAR,aAEF,4BACE,uBAAGA,KAAK,KAAR,aAGJ,yBAAKP,UAAU,UACb,gE,2CCROQ,MAnBf,WACE,OACE,yBAAKR,UAAU,YACb,yBAAKA,UAAU,OAAOG,MAAO,CAAEM,SAAU,aACvC,wDACA,6GAIA,kBAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,MAAM,QAAQZ,UAAU,YACpC,kBAACa,EAAA,EAAD,CAAMC,KAAK,aADb,gBAKF,kBAACb,EAAA,EAAD,CAAOC,IAAKa,IAAKf,UAAU,QAAQG,MAAO,CAAEM,SAAU,gBCK7CO,MAvBf,WACE,OACE,6BACE,yBAAKhB,UAAU,QAAQG,MAAO,CAAEc,UAAW,MACzC,qDACA,+TAOA,iPCYOC,MAxBf,WACE,OACE,6BACE,yBAAKlB,UAAU,QAAQG,MAAO,CAAEc,UAAW,MACzC,wCACA,uJAEqD,IACnD,0BAAMjB,UAAU,cAAhB,sBAEF,4BACEK,MAAM,MACND,OAAO,MACPe,UAAU,KACVC,YAAY,KACZC,MAAM,WACNC,MAAM,iBACNpB,IAAI,mNCLCqB,MAVf,WACE,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,2BCcSC,E,uKAfX,OACE,kBAACC,EAAA,EAAD,CAAWtB,MAAO,CAAEuB,WAAY,MAAOC,YAAa,QAClD,kBAACC,EAAA,EAAD,CAAM5B,UAAU,UACd,kBAAC4B,EAAA,EAAKC,OAAN,CAAaxB,MAAO,GAClB,kBAAC,EAAD,OAEF,kBAACuB,EAAA,EAAKC,OAAN,CAAaxB,MAAO,IAClB,kBAAC,EAAD,a,GATOyB,aCGJC,E,uKAJX,OAAO,kBAAC,EAAD,U,GAFOD,aCQEE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.953466da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.32df319c.png\";","module.exports = __webpack_public_path__ + \"static/media/back.d0e7c1aa.png\";","import React from \"react\";\r\nimport \"./sidepanel.css\";\r\n\r\nimport { Image } from \"semantic-ui-react\";\r\n\r\nimport src from \"../../images/logo.png\";\r\n\r\nfunction sidePanel() {\r\n  return (\r\n    <div className=\"sidepanel\">\r\n      <Image src={src} style={{ height: 120, width: 120, margin: \"auto\" }} />\r\n      <h2>Gayanga Kuruppu</h2>\r\n      <p className=\"description\">\r\n        HUMAN FROM{\" \"}\r\n        <a href=\"https://en.wikipedia.org/wiki/Sri_Lanka\">SRI LANKA</a>\r\n      </p>\r\n      <ul className=\"parts\">\r\n        <li>\r\n          <a href=\"/\">HOME</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/\">ABOUT</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/\">MUSIC</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/\">PROJECTS</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/\">CONTACT</a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"footer\">\r\n        <p>Made by Gayanga Kuruppu | 2020</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default sidePanel;\r\n","import React from \"react\";\r\nimport \"./box.css\";\r\n\r\nimport { Image, Button, Icon } from \"semantic-ui-react\";\r\n\r\nimport img from \"../../images/back.png\";\r\n\r\nfunction introbox() {\r\n  return (\r\n    <div className=\"introbox\">\r\n      <div className=\"info\" style={{ position: \"absolute\" }}>\r\n        <h1>Come drink the Kool-aid!</h1>\r\n        <p>\r\n          Hello there! Feel free to explore the site. You can download my CV\r\n          from below.\r\n        </p>\r\n        <Button basic color=\"black\" className=\"cvButton\">\r\n          <Icon name=\"download\" />\r\n          DOWNLOAD CV\r\n        </Button>\r\n      </div>\r\n      <Image src={img} className=\"image\" style={{ position: \"absolute\" }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default introbox;\r\n","import React from \"react\";\r\nimport \"./box.css\";\r\n\r\nfunction aboutbox() {\r\n  return (\r\n    <div>\r\n      <div className=\"about\" style={{ marginTop: 150 }}>\r\n        <h1>A little bit about me</h1>\r\n        <p>\r\n          My name is Gayanga Kuruppu. I am an innovative and optimized problem\r\n          solver. Experienced in web, mobile and native desktop application\r\n          development. Ambitious, adventurous and has a passion for programming\r\n          and an undying interest in gaining experience on various technologies\r\n          and platforms\r\n        </p>\r\n        <p>\r\n          Apart from software engineering I am passionate about music. Being a\r\n          singer/songwriter, I spend my free time working on music. I'm\r\n          currently working on my new EP, on which you'll find more information\r\n          below.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default aboutbox;\r\n","import React from \"react\";\r\nimport \"./box.css\";\r\n\r\nfunction musicbox() {\r\n  return (\r\n    <div>\r\n      <div className=\"about\" style={{ marginTop: 150 }}>\r\n        <h1>My Music</h1>\r\n        <p>\r\n          \"Ex Animo\" meaning \"From the heart\" is my first EP. It's still in the\r\n          making. Until then you can listen to my new single{\" \"}\r\n          <span className=\"song-title\">\"Fallen for you\".</span>\r\n        </p>\r\n        <iframe\r\n          width=\"90%\"\r\n          height=\"166\"\r\n          scrolling=\"no\"\r\n          frameborder=\"no\"\r\n          allow=\"autoplay\"\r\n          title=\"fallen-for-you\"\r\n          src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/776738947&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true\"\r\n        ></iframe>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default musicbox;\r\n","import React, { Fragment } from \"react\";\r\nimport IntroBox from \"../Box/introbox\";\r\nimport AboutBox from \"../Box/aboutbox\";\r\nimport MusicBox from \"../Box/musicbox\";\r\n\r\nfunction content() {\r\n  return (\r\n    <Fragment>\r\n      <IntroBox />\r\n      <AboutBox />\r\n      <MusicBox />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default content;\r\n","import React, { Component } from \"react\";\r\nimport SidePanel from \"../components/SidePanel/sidepanel\";\r\nimport Content from \"../components/Content/content\";\r\nimport \"../App.css\";\r\n\r\nimport { Grid, Container } from \"semantic-ui-react\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <Container style={{ marginLeft: \"20%\", marginRight: \"20%\" }}>\r\n        <Grid className=\"shadow\">\r\n          <Grid.Column width={5}>\r\n            <SidePanel />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <Content />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\n\nimport Home from \"./pages/home\";\n\nclass App extends Component {\n  render() {\n    return <Home />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}